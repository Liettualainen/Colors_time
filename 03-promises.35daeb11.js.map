{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAgBH,EAAKI,SAASC,OAC9BC,EAAeN,EAAKI,SAASG,MAC7BC,EAAcR,EAAKI,SAASK,KAGlC,SAASC,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUJ,UAEpBU,EAAO,CAAEN,WAAUJ,S,GAEpBA,E,IAXcP,EAAKE,cAAc,mBAgB3BiB,iBAAiB,SAAS,SAACC,GACtCA,EAAEC,iBAKF,IAJA,IAAIC,EAAQC,OAAOjB,EAAakB,OAC5BC,EAAYF,OAAOf,EAAYgB,OAC/BnB,EAASkB,OAAOpB,EAAcqB,OAEzBE,EAAI,EAAGA,EAAIrB,EAAQqB,IAC1BhB,EAAcgB,EAAGJ,EAAMI,EAAED,GACtBE,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MACjBsB,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,MAC7C,CACC0B,QAAS,IAAMC,SAAS,EAAOC,MAAO,S,IAI3CC,OAAM,SAAAR,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MACnBsB,EAAA/B,GAASgC,OAAOO,QACjB,sBAAqCL,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,MAAK,CACjD0B,QAAU,IAAMC,SAAS,EAAOC,MAAO,S,IAG1CnC,EAAKsC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst promiseAmount = form.elements.amount;\nconst promiseDelay = form.elements.delay;\nconst promiseStep = form.elements.step;\nconst submitButton = form.querySelector('[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nsubmitButton.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n  let delay = Number(promiseDelay.value);\n  let stepDelay = Number(promiseStep.value);\n  let amount = Number(promiseAmount.value);\n  \n  for (let i = 0; i < amount; i++) {\n    createPromise(i, delay+i*stepDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n         {\n            timeout: 3000, useIcon: false, width: '240px',\n         },\n )\n  })\n      .catch(({ position, delay }) => {\n       Notiflix.Notify.failure(\n      `❌ Rejected promise ${position} in ${delay}ms`, {\n     timeout:  3000, useIcon: false, width: '240px',},)\n  });\n  }\n  form.reset();\n});\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$promiseAmount","elements","amount","$ce04d3a99e08e73b$var$promiseDelay","delay","$ce04d3a99e08e73b$var$promiseStep","step","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","stepDelay","i","then","param","$parcel$interopDefault","Notify","success","concat","timeout","useIcon","width","catch","failure","reset"],"version":3,"file":"03-promises.35daeb11.js.map"}