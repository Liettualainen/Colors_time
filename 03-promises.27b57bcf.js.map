{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAgBH,EAAKI,SAASC,OAC9BC,EAAeN,EAAKI,SAASG,MAC7BC,EAAcR,EAAKI,SAASK,KAGlC,SAASC,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEL,E,MAAUJ,IAEpBU,EAAO,C,SAAEN,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CAXQP,EAAKE,cAAc,mBAgB3BiB,iBAAiB,SAAUC,IACtCA,EAAEC,iBACF,IAAIC,EAAQC,OAAOjB,EAAakB,OAC5BC,EAAYF,OAAOf,EAAYgB,OAC/BnB,EAASkB,OAAOpB,EAAcqB,OAElC,IAAK,IAAIE,EAAI,EAAGA,EAAIrB,EAAQqB,IAC1BhB,EAAcgB,EAAGJ,EAAMI,EAAED,GACtBE,MAAK,EAAChB,SAAEA,EAAQJ,MAAEA,MACjBqB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqBnB,QAAiBJ,MAAW,CAE/CwB,QAAS,IAAMC,SAAS,EAAOC,MAAO,SAEhD,IAEKC,OAAM,EAACvB,SAAEA,EAAQJ,MAAEA,MACnBqB,EAAA9B,GAAS+B,OAAOM,QACjB,sBAAoBxB,QAAeJ,MAAW,CAC/CwB,QAAU,IAAMC,SAAS,EAAOC,MAAO,SAAW,IAGrDjC,EAAKoC,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst promiseAmount = form.elements.amount;\nconst promiseDelay = form.elements.delay;\nconst promiseStep = form.elements.step;\nconst submitButton = form.querySelector('[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nsubmitButton.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n  let delay = Number(promiseDelay.value);\n  let stepDelay = Number(promiseStep.value);\n  let amount = Number(promiseAmount.value);\n  \n  for (let i = 0; i < amount; i++) {\n    createPromise(i, delay+i*stepDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n         {\n            timeout: 3000, useIcon: false, width: '240px',\n         },\n )\n  })\n      .catch(({ position, delay }) => {\n       Notiflix.Notify.failure(\n      `❌ Rejected promise ${position} in ${delay}ms`, {\n     timeout:  3000, useIcon: false, width: '240px',},)\n  });\n  }\n  form.reset();\n});\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$promiseAmount","elements","amount","$47d4ff9957288465$var$promiseDelay","delay","$47d4ff9957288465$var$promiseStep","step","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","stepDelay","i","then","$parcel$interopDefault","Notify","success","timeout","useIcon","width","catch","failure","reset"],"version":3,"file":"03-promises.27b57bcf.js.map"}